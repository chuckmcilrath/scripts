#!/bin/bash

resolved_path=/etc/systemd/resolved.conf

while true; do
    # Input from user
    echo -e "Choose the install type: \n\n1. Wireguard Server \n2. Wireguard Client\n"
    read install_type

    case "$install_type" in
        1)
            echo -e "Starting the installation of the Wireguard server...\nChecking to see if systemd-resovled is installed..."
            apt update &> /dev/null && apt upgrade -y &> /dev/null 
            if ! dpkg -l | grep systemd-resolved &> /dev/null; then
                echo "systemd-resolved not found. Installing systemd-resolved..."
                apt install systemd-resolved -y &> /dev/null
                if dpkg -l | grep systemd-resolved &> /dev/null; then
                        echo "systemd-resolved has been successfully installed."
                    else
                        echo "Installation failed. Please clear the error and try again. Exiting Wireguard installation."
                        exit 1
                fi
            else
                echo "systemd-resolved is already installed. Continuing..."
            fi
            
            # Function to check if the entered IP is valid
            is_valid_ip() {
                local ip=$1
                local IFS='.'
                local -a octets=($ip)

                # Must have exactly 4 octets
                [[ ${#octets[@]} -ne 4 ]] && return 1

                # Check each octet is between 0 and 255
                for octet in "${octets[@]}"; do
                    [[ ! "$octet" =~ ^[0-9]+$ ]] && return 1  # Ensure it's numeric
                    ((octet < 0 || octet > 255)) && return 1
                done

                return 0  # IP is valid
            }

            # Loop until valid input
            while true; do
                read -p "Enter a DNS for Resolved to use (input the gateway or firewall here): " ip
                if is_valid_ip "$ip"; then
                    echo "Valid IP address: $ip"
                    systemctl restart systemd-resolved.service
                    break  # Exit loop if valid
                else
                    echo "Invalid IP! Please enter a correct IP address (0.0.0.0 - 255.255.255.255)."
                fi
            done

            sed -i "s/#DNS=/DNS="$ip"/" $resolved_path
            echo "The installation has been completed!"
            break # Exit the loop
            ;;
        *)
            echo "Invalid Option."
            ;;
    esac
done
